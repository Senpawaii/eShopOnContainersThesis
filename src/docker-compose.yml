version: '3.4'

services:
  #agent:
  #  container_name: newrelic-infra
  #  build:
  #    context: .
  #    dockerfile: Services/NewRelicInfrastructure/newrelic-infra.dockerfile
  #  cap_add:
  #    - SYS_PTRACE
  #  network_mode: host
  #  pid: host
  #  privileged: true
  #  volumes:
  #    - "/:/host:ro"
  #    - "/var/run/docker.sock:/var/run/docker.sock"
  #  restart: unless-stopped

  seq:
    image: datalust/seq:latest

  sqldata:
    image: mcr.microsoft.com/mssql/server:2019-latest 

  nosqldata:
    image: mongo

  basketdata:
    image: redis:alpine

  rabbitmq:
    image: rabbitmq:3-management-alpine

  coordinator-api:
    image: ${REGISTRY:-eshop}/coordinator.api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Coordinator/Coordinator.API/Dockerfile

  identity-api:
    image: ${REGISTRY:-eshop}/identity.api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Identity/Identity.API/Dockerfile
    depends_on:
      - sqldata

  basket-api:
    image: ${REGISTRY:-eshop}/basket.api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile
    depends_on:
      - basketdata
      - identity-api
      - rabbitmq

  catalog-api:
    image: ${REGISTRY:-eshop}/catalog.api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    cap_add:
      - SYS_ADMIN
    depends_on:
      - sqldata
      - rabbitmq

  thesisfrontend-api:
    image: ${REGISTRY:-eshop}/thesisfrontend.api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/ThesisFrontend/ThesisFrontend.API/Dockerfile

  discount-api:
    image: ${REGISTRY:-eshop}/discount.api:${PLATFORM:-linux}-${TAG:-latest}
    privileged: true
    build:
      context: .
      dockerfile: Services/Discount/Discount.API/Dockerfile
    cap_add:
      - SYS_ADMIN
    depends_on:
      - sqldata
      - rabbitmq

  ordering-api:
    image: ${REGISTRY:-eshop}/ordering.api:${PLATFORM:-linux}-${TAG:-latest}
    profiles: ["EntireApp"]
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.API/Dockerfile
    depends_on:
      - sqldata
      - rabbitmq

  ordering-backgroundtasks:
    image: ${REGISTRY:-eshop}/ordering.backgroundtasks:${PLATFORM:-linux}-${TAG:-latest}
    profiles: ["EntireApp"]
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.BackgroundTasks/Dockerfile
    depends_on:
      - sqldata
      - rabbitmq

  payment-api:
    image: ${REGISTRY:-eshop}/payment.api:${PLATFORM:-linux}-${TAG:-latest}
    profiles: ["EntireApp"]
    build:
      context: .
      dockerfile: Services/Payment/Payment.API/Dockerfile
    depends_on:
      - rabbitmq

  webhooks-api:
    image: ${REGISTRY:-eshop}/webhooks.api:${PLATFORM:-linux}-${TAG:-latest}
    profiles: ["EntireApp"]
    build:
      context: .
      dockerfile: Services/Webhooks/Webhooks.API/Dockerfile
    depends_on:
      - sqldata

  mobileshoppingapigw:
    image: envoyproxy/envoy:v1.11.1
    profiles: ["EntireApp"]

  mobileshoppingagg:
    image: ${REGISTRY:-eshop}/mobileshoppingagg:${PLATFORM:-linux}-${TAG:-latest}
    profiles: ["EntireApp"]
    build:
      context: .
      dockerfile: ApiGateways/Mobile.Bff.Shopping/aggregator/Dockerfile
    depends_on:
      - nosqldata
      - sqldata
      - identity-api
      - rabbitmq
      - ordering-api
      - catalog-api
      - discount-api 
      - basket-api
      - coordinator-api 

  webshoppingagg:
    image: ${REGISTRY:-eshop}/webshoppingagg:${PLATFORM:-linux}-${TAG:-latest}
    profiles: ["EntireApp"]
    build:
      context: .
      dockerfile: ApiGateways/Web.Bff.Shopping/aggregator/Dockerfile
    depends_on:
      - nosqldata
      - sqldata
      - identity-api
      - rabbitmq
      - ordering-api
      - catalog-api
      - discount-api 
      - basket-api
      - coordinator-api 

  ordering-signalrhub:
    image: ${REGISTRY:-eshop}/ordering.signalrhub:${PLATFORM:-linux}-${TAG:-latest}
    profiles: ["EntireApp"]
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.SignalrHub/Dockerfile
    depends_on:
      - nosqldata
      - sqldata
      - identity-api
      - rabbitmq
      - ordering-api
      - catalog-api
      - basket-api
      - discount-api
      - coordinator-api 

  webstatus:
    image: ${REGISTRY:-eshop}/webstatus:${PLATFORM:-linux}-${TAG:-latest}
    profiles: ["EntireApp"]
    build:
      context: .
      dockerfile: Web/WebStatus/Dockerfile

  webspa:
    image: ${REGISTRY:-eshop}/webspa:${PLATFORM:-linux}-${TAG:-latest}
    profiles: ["EntireApp"]
    build:
      context: .
      dockerfile: Web/WebSPA/Dockerfile
      args:
        NODE_IMAGE: ${NODE_IMAGE:-node:16-bullseye}
    depends_on:
      - webshoppingagg
      - webshoppingapigw

  webmvc:
    image: ${REGISTRY:-eshop}/webmvc:${PLATFORM:-linux}-${TAG:-latest}
    profiles: ["EntireApp"]
    build:
      context: .
      dockerfile: Web/WebMVC/Dockerfile
    depends_on:
      - webshoppingagg
      - webshoppingapigw

  webhooks-client:
    image: ${REGISTRY:-eshop}/webhooks.client:${PLATFORM:-linux}-${TAG:-latest}
    profiles: ["EntireApp"]
    build:
      context: .
      dockerfile: Web/WebhookClient/Dockerfile
    depends_on:
      - webhooks-api

  webshoppingapigw:
    profiles: ["EntireApp"]
    image: envoyproxy/envoy:v1.11.1
    